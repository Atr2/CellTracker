{\rtf1\ansi\ansicpg1252\cocoartf949\cocoasubrtf540
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fmodern\fcharset0 Courier;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww15780\viewh14760\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural\pardirnatural

\f0\b\fs24 \cf0 Readme for celltrackerEDS\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\b0 \cf0 The main program is 
\b runTrackerEDS
\b0 , this calls the following principal routines. The cells struct array is defined here, which organizes the data by each cell over time with its own data attached.\
\

\b matchFramesEDS 
\b0 \
	Has option with userParam.useCCC=1 to eliminate the diffuse cells on top of chamber before matching frames via 
\b cellsTopBottom
\b0 . Uses 
\b costMatrixEDS
\b0  to define the matches.\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural\pardirnatural

\b \cf0 mainPeaks2Trajectories\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf0 	
\b0 Is elaborated below, \

\b \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural\pardirnatural
\cf0 findBirthNodes\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf0 	
\b0 Selects nucleus fluor peaks in cell trajectories by multiple filters and then finds the sibling that resulting from the division. Data return in as a struct array, below or program for defn. This routine defines birthNodeParam global to communicate among helper routines\

\b \
decideifgoodaddspline 
\b0 from AW unchanged, but this will get  changed.\
\

\b statsLocalMax
\b0 \
	Evolving routine to make plots of single cell trajectory statistics, and stats on all local max of various types of data, ie coincidence between peaks in nuc marker and smad nuc/cyto. Uses the routine 
\b ddata2lmaxStruct.m
\b0  to define local max\
\
Misc detail, wrote  
\b findNucleiEDS/compressBinaryImg, uncompressBinaryImg
\b0  which might be used to save the outlines of nuclei for the TrackViewer
\b \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural\pardirnatural
\cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\b0 \cf0 %%%%%%%%% 
\b details
\b0  %%%%%%%%%%%%%%%%%%%%%%%%%%\
\

\b findBirthNodes
\b0 , first splines the data(frame) for each cell in 
\b splineCells4BirthPeaks
\b0  and then applies various criterion in 
\b cellsSplined2BirthStruct
\b0  to define a set of putative births along each cell trajectory. One then searches assigns siblings searching both the births list and all cell trajectories that start near the birth time. The final births struct array is cleaned up in 
\b filterBirthsSibs
\b0  and returned. The global struct  
\b birthNodeParam
\b0   is defined in top level routine, 
\b findBirthNodes
\b0 , and communicates among helper routines. Most cutoffs are defined adaptively by cutting up histograms in 
\b extractGaussianFromHist
\b0  so the parameters in birthNodeParam should not need to change other than the verbose. 
\b statsSplined 
\b0 provides a bunch of statistics on the putative birth peaks found in splined data and guided how the birth data was filtered.\
\

\b births
\b0  struct array is added to the chamber.mat file and saved by 
\b runTrackerEDS
\b0 , see 
\b findBirthNodes
\b0  for the defn of fields. The algorithm calls all plausible peaks in the nuclear fluor vs time which also display a local min in their diffusion constants as births and finds the nearest plausible cell at birth time and calls it a sibling.  Many births are rejected for lack of a good sib. There is still some double counting in births array if both sib and nominal 'mother' have a good peak, see 
\b filterBirthsSibs
\b0  for details.\
\
Most remaining problems seem due to tracking errors which might be fixed by using continuity of area in the frame to frame+1 matching.
\f1 \

\f0 \
Things to better integrate:\
	The global birthNodeParam struct, might be moved, but should not be changed, other than the  verbose param\

\b setTrackParamEDS 
\b0 adds data to userParam and might be moved.\
\
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\

\b \
mainPeaks2Trajectories
\b0 ,  takes the peaks\{\} cell array from 
\b matchFrames
\b0 , and joins together cell trajectories that were not found in the first pass. This program is stand alone, all necessary parameters are defined in it, and all comments about the methods are described there. There are extensive diagnostics. \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural\pardirnatural
\cf0 \
This routine calls 
\b peaks2Trajectories
\b0  to reformat peaks\{\}, and then 
\b mergeTrajectories
\b0  which does most of the work, and relies on 
\b costMatrixTraj
\b0  and  
\b match1Frame
\b0  for optimization. 
\b statsTrajDst
\b0  is used to adaptively compute cost to match cell with dummy. The matchframe routine is a modification of AW routine.\
\
Diagnostics routines include 
\b makeTestTrajectories
\b0 , which creates synthetic data (on [0 1]) with births and cell loss. 
\b plotTestTraj
\b0  compares the real cell phylogeny with what 
\b mainPeaks2Trajectories 
\b0 returns.\
\
To examine real data 
\b plotTraj
\b0  allows one to view pre-merger and post-merger trajectories (in which case it is convenient to return both trajectory0 and trajectory from 
\b mainPeaks2Trajectories
\b0 ) and then run the plotting program on these struct arrays. To compare trajectories with actual data, 
\b plotFrameMatchEDS
\b0  uses nuclear image files and their names from imgfiles struct array computed by loop over segmentCells.\
\
To interface with AW routines, I have implemented conversion from my data structures to his.  See 
\b peaksTraj2AWCells().  
\b0 Sequence of calls is..\
>>setTrackParamEDS();\
>>traj = mainPeaks2Trajectories(peaks);\
>>[my_cells, new_peaks] = peaksTraj2AWCells(peaks, traj)\
\
Known BUGS or infelicities:\
	The size of image files as to be explicitly typed into 
\b setTrackParamEDS
\b0  if running stand alone, .. otherwise its gets filled in when runTracker called, and the image size there is set in runSegmentCells, see AW stuff.\
	The matching to boundaries may not work (cells -> dummy instead), unclear if many to one mapping allowed for two generic states eg physical boundary and dummy.\
	When two traj merged that overlap at a common time, then number of cell in traj struct at common time != peaks\{\}(.,4), and real data averaged.}